<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd">
	<!-- schema에 대한 정의! schema == xml파일에서 사용하고 싶은 태그를 정의해놓은 파일 -->
	<!-- beans 라는 태그들을 사용하겠다! -->
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	<!-- shared resources == DB -->
		
	<!-- 1) HikariConfig(DB 연결을 위한 데이터 기술) 생성 -->	
	<!-- HikariConfig hikari = new HikariConfig(); -->
	<!-- 재사용하기 위해서 id값을 주기 -->	
	<!-- hikariConfig.setXXXX(drivername);
		 hikariConfig.setXXXX(jdbcURL);
		 hikariConfig.setXXXX(username);
		 hikariConfig.setXXXX(password);
	-->
	<bean class="com.zaxxer.hikari.HikariConfig" id="hikariConfig">
		<!-- setter 메소드 호출 -->
		<property name="driverClassName" value="com.mysql.jdbc.Driver"/>
		<!-- DataSourceExplorer - 연결될 com 계정 선택 - properties 
			- Driver Properties - jdbcUrl -->
		<property name="jdbcUrl" value="jdbc:mysql://localhost:3306/com"/>
		<property name="username" value="com"/>
		<property name="password" value="com01"/>
	</bean>	
	
	<!-- 2) DBCP 생성 : HikariDataSource -->
	<bean class="com.zaxxer.hikari.HikariDataSource" id="dataSource">
		<constructor-arg ref="hikariConfig"/>
	</bean>	
		
	<!-- 3) SqlSessionFactoryBean 객체 생성 -->
    <!-- : Connection 객체를 빌려서 사용하는 객체! -->
    <!-- : Mapper interface 구현체 역할을 담당! -->
    <bean class="org.mybatis.spring.SqlSessionFactoryBean">
    	<!-- setter 메소드 호출 - property, DBCP에 있는 걸 참조해야해서 value(값을 지정해서 넣어주는 것)가 아닌 ref로 해야함 -->
    	<property name="dataSource" ref="dataSource"/>
    </bean>	
	
	<!-- implements를 하기 위해서는 mybatis-spring schema 로드 해줘야함
		Namespaces탭 들어가서 mybatis-spring 체크해주기 -->
	
	<!-- 4) 구현해야하는 mapper 파일의 위치 등록하기 -->
	<mybatis-spring:scan base-package="kr.smhrd.mapper"/>
	
	
	<!--
		public class SqlSessionFactoryBean implements BoardMapper{
			@Override
			public ArrayList<Board> getList(){
				session.selectList("getList");
				return list;
			}
		
		}
		SqlSessionFactoryBean bean = new SqlSessionFactoryBean();
	 -->
	
	
	
		
		
		
</beans>
